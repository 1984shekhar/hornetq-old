<?xml version="1.0" encoding="UTF-8"?>

<!-- ============================================================================= -->
<!-- Copyright © 2009 Red Hat, Inc. and others.                                    -->
<!--                                                                               -->
<!-- The text of and illustrations in this document are licensed by Red Hat under  -->
<!-- a Creative Commons Attribution–Share Alike 3.0 Unported license ("CC-BY-SA"). -->
<!--                                                                               -->
<!-- An explanation of CC-BY-SA is available at                                    -->
<!--                                                                               -->
<!--            http://creativecommons.org/licenses/by-sa/3.0/.                    -->
<!--                                                                               -->
<!-- In accordance with CC-BY-SA, if you distribute this document or an adaptation -->
<!-- of it, you must provide the URL for the original version.                     -->
<!--                                                                               -->
<!-- Red Hat, as the licensor of this document, waives the right to enforce,       -->
<!-- and agrees not to assert, Section 4d of CC-BY-SA to the fullest extent        -->
<!-- permitted by applicable law.                                                  -->
<!-- ============================================================================= -->

<chapter id="command-buffering">
    <title>Command Buffering</title>
    <para>As HornetQ clients send commands to their servers they store each sent command in
        an in-memory buffer. In the case that connection failure occurs and the client subsequently
        reconnects to the same server or fails over onto a replica server, as part of the
        reconnection protocol the server informs the client during reconnection with the id of the
        last command it successfully received from that client.</para>
    <para>If the client has sent more commands than were received before failover it can replay any
        sent commands from its buffer so that the client and server can reconcile their
        states.</para>
    <para>The size of this buffer is configured by the <literal>ProducerWindowSize</literal>
        parameter, when the server has received <literal>ProducerWindowSize</literal> bytes of
        commands and processed them it will send back a command confirmation to the client, and the
        client can then free up space in the buffer.</para>
    <para>If you are using JMS and you're using the JMS service on the server to load your JMS
        connection factory instances into JNDI then this parameter can be configured in <literal
            >hornetq-jms.xml</literal> using the element <literal>producer-window-size</literal> a. If
        you're using JMS but not using JNDI then you can set these values directly on the <literal
            >HornetQConnectionFactory</literal> instance using the appropriate setter method.</para>
    <para>If you're using core you can set these values directly on the <literal
            >ClientSessionFactory</literal> instance using the appropriate setter method.</para>
    <para>The send window is specified in bytes, and has a default value of <literal
        >1MiB</literal>.</para>
    <para>When the send buffer becomes full, any attempts to send more commands from the client will
        block until the client receives a confirmation from the server and clears out the buffer.
        Because of the blocking, the command buffer performs a type of <literal>flow
            control</literal>, preventing the client from overwhelming the server with
        commands.</para>
    <para>Setting this parameter to <literal>-1</literal> disables any flow control on
        sending.</para>
</chapter>
